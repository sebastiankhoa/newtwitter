import { useEffect, useState } from "react"
import { useRouter } from "next/router"

import Head from "next/head"
import { Flex, IconButton, Text } from "@chakra-ui/react"
import { FaArrowLeft } from "react-icons/fa"

import { getProviders, getSession, useSession } from "next-auth/react"
import { useRecoilState } from "recoil"

import { db } from "../firebase"
import { collection, doc, onSnapshot, orderBy, query } from "@firebase/firestore"

import Sidebar from "../components/Sidebar"
import Feed from "../components/Feed"
import Login from "../components/Login"
import Post from "../components/Post"
import { modalState } from "../atom/modalAtom"
import { CommentModal } from "../components/CommentModal"
import Comments from "../components/Comments"

export default function DetailPage({ trendingResults, followResults, providers }) {
	const { data: session } = useSession()

	const [post, setPost] = useState()
	const [comments, setComments] = useState([])

	const router = useRouter()
	const { id } = router.query

	//fetch all post from sever
	useEffect(() => {
		onSnapshot(doc(db, "posts", id), (snapshot) => {
			setPost(snapshot.data())
		})
	}, [db])

	// fetch all comment from sever
	useEffect(() => {
		onSnapshot(query(collection(db, "posts", id, "comments"), orderBy("timestamp", "desc")), (snapshot) =>
			setComments(snapshot.docs)
		)
	}, [db, id])

	if (!session) return <Login providers={providers} />

	return (
		<div>
			<Head>
				<title>
					{post?.username} on Twitter: "{post?.text}"
				</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<Flex bgGradient="linear(to-r, gray.300, yellow.400, pink.200)" minHeight="100vh" mx="auto" maxW="1500px">
					<Sidebar />
					{/* Container chính giữa chứ nội dung post và comment */}
					<Flex flexDirection="column" ml={{ sm: "10", md: "200", lg: "250" }}>
						<Flex mt="5" align="center" gap="3" pos="sticky" top="0">
							{/* Nút back và chữ Tweet */}
							<IconButton
								color="blue.400"
								fontSize="40px"
								variant="unstyled"
								icon={<FaArrowLeft />}
								onClick={() => router.push("/")}
							/>
							<Text fontSize="40px" color="blue.400" fontWeight="bold">
								Tweet
							</Text>
						</Flex>
						{/* Post component đã từng sử dụng ở Feed */}
						<Post post={post} id={id} />
						{/* Comments component */}
						{comments.length > 0 && (
							<Flex flexDirection="column">
								{comments.map((cm) => (
									<Comments key={cm.id} id={cm.id} comment={cm.data()} />
								))}
							</Flex>
						)}
					</Flex>

					{/* Widget*/}
					<CommentModal />
				</Flex>
			</main>
		</div>
	)
}

export async function getServerSideProps(context) {
	const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV").then((res) => res.json())
	const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then((res) => res.json())
	const providers = await getProviders()
	const session = await getSession(context)

	return {
		props: {
			trendingResults,
			followResults,
			providers,
			session,
		},
	}
}
